server:
  port: 8081

spring:
  thymeleaf:
    cache: false
    encoding: UTF-8
    prefix: classpath:templates/
    suffix: .html
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL;
    username: sa
    password:
  sql:
    init:
      mode: always
      schema-locations: classpath:sql/schema.sql
      data-locations: classpath:sql/data.sql
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jpa:
    hibernate:
# ddl-auto 옵션 : none(데이터베이스 스키마를 생성 또는 변경하지 않음, 기본값) / create-only(Hibernate 가 스키마 생성, 이미 존재하는 경우 삭제하지 않고 기존 데이터 보존)
# drop(데이터베이스 스키마를 삭제하고 다시 생성) / create(데이터베이스 스키마를 삭제하고 다시 생성) / create-drop(APP 실행할 때마다 스키마를 삭제하고 다시 생성, APP 종료시 스키마를 삭제)
# validate(Hibernate 가 데이터베이스 스키마를 유효성 검사 - 스키마가 존재하지 않는 경우 예외 발생)
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
    show_sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    #defer-datasource-initialization: true  # Hibernate 의 기능 수행 후 Schema.sql 을 수행하고 싶으면 해당 옵션을 주면 된다.
logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: trace

